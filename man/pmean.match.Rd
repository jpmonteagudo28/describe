% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute.R
\name{pmean.match}
\alias{pmean.match}
\title{Imputation of missing values through predictive mean matching}
\usage{
pmean.match(
  data,
  family = "AUTO",
  robust = FALSE,
  k = 3,
  char_to_factor = FALSE,
  seed = NULL,
  verbose = FALSE
)
}
\arguments{
\item{data}{a numeric matrix or data frame of at least 2 columns.}

\item{family}{the distribution family of your observations. The family arguments defaults
to 'AUTO'; and it will automatically select a distribution family (gaussian, binomial, multinomial) based on the type of
variable (numeric or factor). The distribution family dictates the regression model used (lm,glm, multinom).
However, the user can change the family argument to match his response variable distribution
and the function will adapt to this input by using the generalized linear model or beta regression.}

\item{robust}{logical indicated whether to use robust estimation methods or ignore them. If set to 'TRUE',
the function will make use of robust linear and generalized linear models to make its prediction.}

\item{k}{numeric vector indicating number of nearest neighbors to extract for imputation.
Currently k defaults to 3 but can be changed.}

\item{seed}{numeric vector used for reproducible results. Used to sample the same predicted value over time.}
}
\value{
a matrix or data frame containing the imputed dataset.
}
\description{
Predictive mean matching (PMM)
is an imputation technique introduced by  Donald . Rubin in 1987. This imputation method aims
to maintain the natural variability of the data and avoid implausible imputations that can
occur with other univariate imputation methods.
}
\details{
How's predictive mean matching different from conditional mean imputation(CMI)?

PMM is a combination of CMI and HDI.
Predictive mean matching (PMM) uses regression on observed variables to estimate
missing values, like CMI, however, PMM will also fill in the missing value by
randomly sampling observed values whose predicted values are closest
to the predicted values of the missing observation. This is currently done using
the nearest neighbor approach with a set number of neighbors (3) but can be changed
depending on your data.
}
\examples{
set.seed(123)
data <- data.frame(x1 = stats::rnorm(100),x2 = stats::rnorm(100),y = stats::rnorm(100))
data$x1[sample(1:100, 20)] <- NA
data$x2[sample(1:100, 15)] <- NA
data$y[sample(1:100, 10)] <- NA
fact_dat <- data.frame(data, c = gl(5,20))
pmean.match(fact_dat, robust = TRUE)

}
